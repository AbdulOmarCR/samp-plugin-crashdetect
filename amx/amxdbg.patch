diff -ruNpw amx_orig/amxdbg.c amx/amxdbg.c
--- amx_orig/amxdbg.c	2005-07-23 17:07:00.000000000 +0700
+++ amx/amxdbg.c	2012-04-26 10:18:36.734367600 +0700
@@ -22,6 +22,7 @@
  *
  *  Version: $Id: amxdbg.c 3363 2005-07-23 09:03:29Z thiadmer $
  */
+
 #include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -67,6 +68,7 @@ int AMXAPI dbg_LoadInfo(AMX_DBG *amxdbg,
   #if BYTE_ORDER==BIG_ENDIAN
     amx_Align32((uint32_t*)&amxhdr.size);
     amx_Align16(&amxhdr.magic);
+    amx_Align16(&dbghdr.flags);
   #endif
   if (amxhdr.magic != AMX_MAGIC)
     return AMX_ERR_FORMAT;
@@ -257,8 +259,9 @@ int AMXAPI dbg_LookupFunction(AMX_DBG *a
   for (index = 0; index < amxdbg->hdr->symbols; index++) {
     if (amxdbg->symboltbl[index]->ident == iFUNCTN
         && amxdbg->symboltbl[index]->codestart <= address
-        && amxdbg->symboltbl[index]->codeend > address)
+        && amxdbg->symboltbl[index]->codeend > address) {
       break;
+    }
   } /* for */
   if (index >= amxdbg->hdr->symbols)
     return AMX_ERR_NOTFOUND;
diff -ruNpw amx_orig/amxdbg.h amx/amxdbg.h
--- amx_orig/amxdbg.h	2005-07-23 17:07:00.000000000 +0700
+++ amx/amxdbg.h	2012-04-26 10:19:29.382053000 +0700
@@ -27,6 +27,8 @@
 #ifndef AMXDBG_H_INCLUDED
 #define AMXDBG_H_INCLUDED
 
+#include <stdio.h>
+
 #ifndef AMX_H_INCLUDED
   #include "amx.h"
 #endif
@@ -63,17 +65,17 @@ extern  "C" {
 #endif
 
 typedef struct tagAMX_DBG_HDR {
-  int32_t size          PACKED; /* size of the debug information chunk */
+  uint32_t size         PACKED; /* size of the debug information chunk */
   uint16_t magic        PACKED; /* signature, must be 0xf1ef */
   char    file_version  PACKED; /* file format version */
   char    amx_version   PACKED; /* required version of the AMX */
-  int16_t flags         PACKED; /* currently unused */
-  int16_t files         PACKED; /* number of entries in the "file" table */
-  int16_t lines         PACKED; /* number of entries in the "line" table */
-  int16_t symbols       PACKED; /* number of entries in the "symbol" table */
-  int16_t tags          PACKED; /* number of entries in the "tag" table */
-  int16_t automatons    PACKED; /* number of entries in the "automaton" table */
-  int16_t states        PACKED; /* number of entries in the "state" table */
+  uint16_t flags        PACKED; /* currently unused */
+  uint16_t files        PACKED; /* number of entries in the "file" table */
+  uint16_t lines        PACKED; /* number of entries in the "line" table */
+  uint16_t symbols      PACKED; /* number of entries in the "symbol" table */
+  uint16_t tags         PACKED; /* number of entries in the "tag" table */
+  uint16_t automatons   PACKED; /* number of entries in the "automaton" table */
+  uint16_t states       PACKED; /* number of entries in the "state" table */
 } AMX_DBG_HDR           PACKED;
 #define AMX_DBG_MAGIC   0xf1ef
 
@@ -89,34 +91,34 @@ typedef struct tagAMX_DBG_LINE {
 
 typedef struct tagAMX_DBG_SYMBOL {
   ucell   address       PACKED; /* address in the data segment or relative to the frame */
-  int16_t tag           PACKED; /* tag for the symbol */
+  uint16_t tag          PACKED; /* tag for the symbol */
   ucell   codestart     PACKED; /* address in the code segment from which this symbol is valid (in scope) */
   ucell   codeend       PACKED; /* address in the code segment until which this symbol is valid (in scope) */
   char    ident         PACKED; /* kind of symbol (function/variable) */
   char    vclass        PACKED; /* class of symbol (global/local) */
-  int16_t dim           PACKED; /* number of dimensions */
+  uint16_t dim          PACKED; /* number of dimensions */
   const char name[1]    PACKED; /* ASCII string, zero-terminated */
 } AMX_DBG_SYMBOL        PACKED;
 
 typedef struct tagAMX_DBG_SYMDIM {
-  int16_t tag           PACKED; /* tag for the array dimension */
+  uint16_t tag          PACKED; /* tag for the array dimension */
   ucell   size          PACKED; /* size of the array dimension */
 } AMX_DBG_SYMDIM        PACKED;
 
 typedef struct tagAMX_DBG_TAG {
-  int16_t tag           PACKED; /* tag id */
+  uint16_t tag          PACKED; /* tag id */
   const char name[1]    PACKED; /* ASCII string, zero-terminated */
 } AMX_DBG_TAG           PACKED;
 
 typedef struct tagAMX_DBG_MACHINE {
-  int16_t automaton     PACKED; /* automaton id */
+  uint16_t automaton    PACKED; /* automaton id */
   ucell address         PACKED; /* address of state variable */
   const char name[1]    PACKED; /* ASCII string, zero-terminated */
 } AMX_DBG_MACHINE       PACKED;
 
 typedef struct tagAMX_DBG_STATE {
-  int16_t state         PACKED; /* state id */
-  int16_t automaton     PACKED; /* automaton id */
+  uint16_t state        PACKED; /* state id */
+  uint16_t automaton    PACKED; /* automaton id */
   const char name[1]    PACKED; /* ASCII string, zero-terminated */
 } AMX_DBG_STATE         PACKED;
 
